name: Frontend CI

on:
  push:
    branches: [ develop ]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-ci.yml'
  pull_request:
    branches: [ develop ]
    paths:
      - 'frontend/**'
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install deps
        run: npm ci || npm i
      - name: Test
        run: npm run test
      - name: Coverage (artifact)
        if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/develop'
        run: npm run coverage:ci
      - name: Upload coverage
        if: github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/develop'
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Docker login
        if: env.DOCKERHUB_LOGIN_USERNAME != '' && env.DOCKERHUB_LOGIN_TOKEN != ''
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_LOGIN_USERNAME }}
          password: ${{ env.DOCKERHUB_LOGIN_TOKEN }}
      - name: Resolve namespace
        id: ns
        shell: bash
        env:
          LOGIN_USER: ${{ env.DOCKERHUB_LOGIN_USERNAME }}
          NAMESPACE: ${{ env.DOCKERHUB_IMAGE_NAMESPACE }}
        run: |
          ns=${NAMESPACE:-$LOGIN_USER}
          echo "namespace=$ns" >> $GITHUB_OUTPUT
      - name: Compute tags
        id: tags
        shell: bash
        run: |
          sha=${GITHUB_SHA::7}
          echo "latest,${sha}" | tr -d '\n' > tags.txt
          echo "list=$(cat tags.txt)" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: frontend
          push: ${{ env.DOCKERHUB_LOGIN_USERNAME != '' && env.DOCKERHUB_LOGIN_TOKEN != '' }}
          tags: |
            ${{ steps.ns.outputs.namespace }}/pmt-frontend:latest
            ${{ steps.ns.outputs.namespace }}/pmt-frontend:${{ github.sha }}
    env:
      DOCKERHUB_LOGIN_USERNAME: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
      DOCKERHUB_LOGIN_TOKEN: ${{ secrets.DOCKERHUB_LOGIN_TOKEN }}
      DOCKERHUB_IMAGE_NAMESPACE: ${{ secrets.DOCKERHUB_IMAGE_NAMESPACE }}
