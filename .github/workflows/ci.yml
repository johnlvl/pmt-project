name: backend-ci

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Make mvnw executable (Linux)
        run: chmod +x mvnw

      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test (no coverage by default)
        run: ./mvnw -q -B test

      - name: Coverage (optional)
        if: ${{ github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/develop' }}
        run: ./mvnw -q -B -Pcoverage test

      - name: Upload coverage report (JaCoCo)
        if: ${{ github.event_name == 'workflow_dispatch' || github.ref == 'refs/heads/develop' }}
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: |
            **/target/site/jacoco/**
          if-no-files-found: ignore

  docker:
    needs: build-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    env:
      DOCKERHUB_LOGIN_USERNAME: ${{ secrets.DOCKERHUB_LOGIN_USERNAME }}
      DOCKERHUB_LOGIN_TOKEN: ${{ secrets.DOCKERHUB_LOGIN_TOKEN }}
      DOCKERHUB_IMAGE_NAMESPACE: ${{ secrets.DOCKERHUB_IMAGE_NAMESPACE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Make mvnw executable (Linux)
        run: chmod +x mvnw

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ env.DOCKERHUB_LOGIN_USERNAME != '' && env.DOCKERHUB_LOGIN_TOKEN != '' }}
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKERHUB_LOGIN_USERNAME }}
          password: ${{ env.DOCKERHUB_LOGIN_TOKEN }}

      - name: Extract project version (with fallback)
        id: mvn
        shell: bash
        run: |
          set -e
          VERSION=$(./mvnw -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive org.codehaus.mojo:exec-maven-plugin:3.5.0:exec || true)
          VERSION_TRIMMED=$(echo "$VERSION" | tr -d ' \n\r')
          if [ -z "$VERSION_TRIMMED" ]; then
            VERSION_TRIMMED=${GITHUB_SHA::7}
          fi
          echo "version=$VERSION_TRIMMED" >> $GITHUB_OUTPUT

      - name: Resolve image namespace
        id: ns
        shell: bash
        run: |
          NS="$DOCKERHUB_IMAGE_NAMESPACE"
          if [ -z "$NS" ]; then
            NS="$DOCKERHUB_LOGIN_USERNAME"
          fi
          echo "namespace=$NS" >> $GITHUB_OUTPUT

      - name: Build and push image
        if: ${{ env.DOCKERHUB_LOGIN_USERNAME != '' && env.DOCKERHUB_LOGIN_TOKEN != '' }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ steps.ns.outputs.namespace }}/pmt-backend:latest
            ${{ steps.ns.outputs.namespace }}/pmt-backend:${{ steps.mvn.outputs.version }}
